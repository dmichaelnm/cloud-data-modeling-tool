name: Deployment - Functions - Production

on:
  workflow_dispatch

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    environment: Production
    env:
      GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Install Dependencies
        run: |
          cd backend/functions
          npm ci
          cd ..

      - name: Create AWS Credentials File
        run: |
          cd backend/functions/src/provider
          echo "export const awsCredentials = {" > awsSecret.ts
          echo "  accessKeyId: '${{secrets.AWS_ACCESS_KEY_ID}}'," >> awsSecret.ts
          echo "  secretAccessKey: '${{secrets.AWS_SECRET_ACCESS_KEY}}'," >> awsSecret.ts
          echo "  role: '${{secrets.AWS_IAM_ROLE_ARN}}'," >> awsSecret.ts
          echo "  region: '${{secrets.AWS_REGION}}'," >> awsSecret.ts
          echo "};" >> awsSecret.ts
          cd ../../../..

      - name: Create GCP Credentials File
        run: |
          cd backend/functions/src/provider
          echo "export const gcpCredentials = {" > gcpSecret.ts
          echo "  type: 'service_account'," >> gcpSecret.ts
          echo "  project_id: '${{vars.PROJECT_ID}}'," >> gcpSecret.ts
          echo "  private_key_id: '${{secrets.GCP_PRIVATE_KEY_ID}}'," >> gcpSecret.ts
          echo "  // eslint-disable-next-line max-len" >> gcpSecret.ts
          echo "  private_key: '${{secrets.GCP_PRIVATE_KEY}}'," >> gcpSecret.ts
          echo "  client_email: '${{secrets.GCP_SERVICE_ACCOUNT}}'," >> gcpSecret.ts
          echo "  client_id: '${{secrets.GCP_CLIENT_ID}}'," >> gcpSecret.ts
          echo "  universe_domain: 'googleapis.com'," >> gcpSecret.ts
          echo "};" >> gcpSecret.ts
          cd ../../../..      

      - name: Prepare Google Deployment Credentials
        run: |
          cd backend
          echo "${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}" | base64 --decode > "google-application-credentials.json"
          cd ..

      - name: Install Firebase CLI
        run: |
          cd backend/functions
          npm install -g firebase-tools
          cd ..

      - name: Deploy Firebase Functions
        run: |
          cd backend
          firebase deploy --only functions --non-interactive --force --project ${{vars.PROJECT_ID}}
          cd ..

      - name: Remove files
        run: |
          rm backend/google-application-credentials.json
          rm backend/functions/src/provider/awsSecret.ts
          rm backend/functions/src/provider/gcpSecret.ts
